
power_tester_mega8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000000c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  0000078c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000811  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000036  00000000  00000000  00000831  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000a9  00000000  00000000  00000867  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000005f  00000000  00000000  00000910  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000153  00000000  00000000  0000096f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00000ac4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000097  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000b9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	14 d0       	rcall	.+40     	; 0x5c <main>
  34:	19 c0       	rjmp	.+50     	; 0x68 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <init_GPIO>:


void init_GPIO()
{

	DDRC = 0b11100000;
  38:	80 ee       	ldi	r24, 0xE0	; 224
  3a:	84 bb       	out	0x14, r24	; 20
	PORTC =0b11100000;
  3c:	85 bb       	out	0x15, r24	; 21

	DDRB = 0b11111101;
  3e:	8d ef       	ldi	r24, 0xFD	; 253
  40:	87 bb       	out	0x17, r24	; 23
	PORTB = 0b00000000;
  42:	18 ba       	out	0x18, r1	; 24

}
  44:	08 95       	ret

00000046 <init_adc>:


void init_adc()
{
	ADMUX|=((1<<REFS1)|(1<<REFS0));// internal 2.56
  46:	87 b1       	in	r24, 0x07	; 7
  48:	80 6c       	ori	r24, 0xC0	; 192
  4a:	87 b9       	out	0x07, r24	; 7
	//ADMUX|=(1<<REFS0);//  external AVCC
	ADMUX|=(1<<ADLAR);// shift left
  4c:	3d 9a       	sbi	0x07, 5	; 7

	ADCSRA|=((1<<ADIE)|(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
  4e:	86 b1       	in	r24, 0x06	; 6
  50:	8f 68       	ori	r24, 0x8F	; 143
  52:	86 b9       	out	0x06, r24	; 6
	
	ADMUX =  ADMUX & adc_mux_clear;
  54:	87 b1       	in	r24, 0x07	; 7
  56:	80 7f       	andi	r24, 0xF0	; 240
  58:	87 b9       	out	0x07, r24	; 7
}
  5a:	08 95       	ret

0000005c <main>:

int main ()
{
	init_GPIO();
  5c:	ed df       	rcall	.-38     	; 0x38 <init_GPIO>
	 
	 //init_interrupt();
	 init_adc();
  5e:	f3 df       	rcall	.-26     	; 0x46 <init_adc>
	sei();
  60:	78 94       	sei
	while(1)
	{
		PORTC=PORTC;
  62:	85 b3       	in	r24, 0x15	; 21
  64:	85 bb       	out	0x15, r24	; 21
  66:	fd cf       	rjmp	.-6      	; 0x62 <main+0x6>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>
